{"version":3,"file":"static/js/720.edafbc71.chunk.js","mappings":"uKACA,EAAyB,uB,SCsCzB,EAnCe,WACb,OAA8BA,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,EACZ,GAAE,IAUH,OACE,mBAAQE,UAAWC,EAAnB,UACI,eAAIC,QAVa,WACrBJ,GAAW,EACZ,EAQK,SACGD,GACC,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iBAAMM,eAdY,WAC1BL,GAAW,EACZ,EAYS,kBAGA,YAKX,E,kBCrCUM,EAAc,CACvBC,QAAS,EACTC,MAAO,EACPC,WAAY,EACZC,KAAM,EACNC,UAAW,EACXC,UAAW,EACXC,QAAS,EACTC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,QAAS,EACTC,OAAQ,EACRC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,QAAS,EACTC,KAAM,EACNC,SAAU,EACVC,YAAa,EACbC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,OAAQ,EACRC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,MAAO,EACPC,WAAY,EACZC,QAAS,EACTC,WAAY,EACZC,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,MAAO,EACPC,QAAS,EACTC,OAAQ,EACRC,QAAS,EACTC,MAAO,EACPC,MAAO,EACPC,SAAU,EACVC,SAAU,EACVC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,MAAO,EACPC,MAAO,EACPC,OAAQ,EACRC,SAAU,EACVC,OAAQ,EACRC,UAAW,EACXC,OAAQ,EACRC,cAAe,EACfC,UAAW,EACXC,QAAS,EACTC,OAAQ,EACRC,SAAU,EACVC,UAAW,EACXC,SAAU,EACVC,IAAK,GCvDHC,EAAM,CAAC,EAAEC,eAITC,EAA8B,IAAIC,OACpC,CACE,cACA,aACA,MACA,OACA,QACA,cACA,uBACA,MACA,OACA,QACA,WACA,0BACA,QACA,OACA,MACA,MACA,SACA,iBACE,CACE,qBACA,KACA,KACA,QACA,MACA,QACA,KACA,MACA,SACA,WACA,MACA,WACA,MACAC,KAAK,KACP,QACF,iBACE,CACE,kBACA,KACA,QACA,MACA,QACA,KACA,MACA,KACA,SACA,MACA,WACA,MACAA,KAAK,KACP,SACFA,KAAK,KACP,KAGEC,EAA8B,IAAIF,OACpC,cACE,CACE,qBACA,KACA,KACA,QACA,QACA,KACA,UACA,UACA,MACA,WACA,MACAC,KAAK,KACP,MACF,KAKEE,EAAiC,IAAIH,OACvC,MACE,CACE,kBACA,uBACA,cACA,KACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,KACA,KACA,SACA,QACA,QACA,SACA,oBACAC,KAAK,KACP,KACF,KAGEG,EAAiC,IAAIJ,OACvC,CACE,aACA,kBACA,aACA,wBACA,oBACA,cACAC,KAAK,KACP,KAGEI,EAAmC,IAAIL,OACzC,CACE,gBACA,WACA,OACA,OACA,KACA,KACA,KACA,MACA,gBACA,gBACA,OACA,aACA,mBACAC,KAAK,KACP,KAGEK,EAAkC,SAGlCC,EAAoB,IAAIP,OAC1B,CACE,OACE,CACE,KACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,QACAC,KAAK,KACP,IACF,MACE,CACE,KACA,OACA,OACA,MACA,OACA,OACA,SACA,SACA,SACA,UACA,SACA,SACA,SACA,UACA,sBACAA,KAAK,KACP,MACFA,KAAK,KACP,KAIEO,EAAoB,IAAIR,OAC1B,CACE,OAEE,CACE,QACA,OACA,OACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,OACA,OACA,QACA,QACA,QACA,MACA,QACA,OACA,OACA,OACA,OACA,QACA,SACAC,KAAK,KACP,IACF,sFACAA,KAAK,KACP,KAIEQ,EAAoB,6CAiCxB,SAASC,EAAIC,GACX,IAEIC,EAEAC,EAEAC,EAEAC,EAEAC,EAVAC,EAAQ,EAYZ,GAAqB,IAAjBN,EAAMO,OACR,OAAOD,EAIT,GAAIN,EAAMO,OAAS,EACjB,OAAO,EAIT,GAAIrB,EAAIsB,KAAKnF,EAAa2E,GACxB,OAAO3E,EAAY2E,GAMrB,GAFAE,EAAWO,EAAUT,EAAO,GAExBd,EAAI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,CAAC,SAAU,MACX,CAAC,gEAAiE,QAClE,CAAC,kCAAmC,OACpC,CAAC,QAAS,KACV,CAAC,uFAAwF,QACzF,CAAC,oBAAqB,QACtB,CAAC,uBAAwB,UACzB,CAAC,sBAAuB,MACxB,CAAC,2FAA4F,MAC7F,CAAC,qEAAsE,SACvE,CAAC,iCAAkC,MACnC,CAAC,oBAAqB,QACtB,CAAC,4FAA6F,QAC9F,CAAC,yGAA0G,QAC3G,CAAC,8FAA+F,QAChG,CAAC,0BAA2B,OAC5B,CAAC,+BAAgC,QACjC,CAAC,sBAAuB,QACxB,CAAC,oBAAqB,UACtB,CAAC,eAAgB,MACjB,CAAC,YAAa,MACd,CAAC,QAAS,QACV2B,SAAQ,SAAU3B,GAClB,OAAO3H,EAAUkJ,gBAAgBvB,EAAK,GAAIA,EAAK,GAChD,IAKD,CAEE,YACA,SACA,SACA,MACA,WACA,UACA,OACA,YACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,QACA,WACA,MACA,WACA,cACA,QACA,SACA,WACA,YACA,MACA,SACA,YACA,YACA,YACA,WACA,WACA,MACA,UACA,UACA,WACA,WACA,eACA,SACA,SACA,YACA,WACA,YACA,cACA,QACA,UACA,QACA,SACA,aACA,YACA,WACA,OACA,QACA,OACA,QACA,QACA,MACA,QACA,OACA,OACA,YACA,OACA,WACA,SACA,SACA,YACA,WACA,OACA,WACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,iBACA,QACA,OACA,SACA,UACA,UACA,aACA,WACA,MACA,kBAEA,gBACA,SACA,SACA,YACA,WACA,QACA,WACA2B,QAAQtJ,EAAUmJ,oBAEbnJ,CACR,CAhfoBA,E","sources":["webpack://client/./src/styles/flekin/Header.module.css?0eca","components/flekin/Header.jsx","../node_modules/syllable/problematic.js","../node_modules/syllable/index.js","../node_modules/flekin/index.js","webpack://client/./src/styles/flekin/Main.module.css?cfaa","components/flekin/Main.jsx","webpack://client/./src/styles/flekin/Footer.module.css?a133","components/flekin/Footer.jsx","webpack://client/./src/styles/flekin/Flekin.module.css?871f","components/flekin/Flekin.jsx","../node_modules/normalize-strings/index.js","../node_modules/pluralize/pluralize.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__6bMGL\",\"slideUp\":\"Header_slideUp__jhLwP\"};","import React, {useState} from 'react';\nimport { useEffect } from 'react';\nimport styles from '../../styles/flekin/Header.module.css';\n\nconst Header = () => {\n  const [animate, setAnimate] = useState(false);\n\n  useEffect(() => {\n    setAnimate(true);\n  }, [])\n\n  const animateHandler = () => {\n    setAnimate(true);\n  }\n\n  const animationEndHandler = () => {\n    setAnimate(false);\n  }\n\n  return (\n    <header className={styles.header}>\n        <h1 onClick={animateHandler} >\n          {animate? \n            <>\n            <span>F</span>\n            <span>l</span>\n            <span>e</span>\n            <span>k</span>\n            <span>i</span>\n            <span onAnimationEnd={animationEndHandler}>n</span>\n            </>\n          :\n            \"Flekin\"\n          }\n        </h1>\n    </header>\n  )\n}\n\nexport default Header","export var problematic = {\n  abalone: 4,\n  abare: 3,\n  abbruzzese: 4,\n  abed: 2,\n  aborigine: 5,\n  abruzzese: 4,\n  acreage: 3,\n  adame: 3,\n  adieu: 2,\n  adobe: 3,\n  anemone: 4,\n  anyone: 3,\n  apache: 3,\n  aphrodite: 4,\n  apostrophe: 4,\n  ariadne: 4,\n  cafe: 2,\n  calliope: 4,\n  catastrophe: 4,\n  chile: 2,\n  chloe: 2,\n  circe: 2,\n  coyote: 3,\n  daphne: 2,\n  epitome: 4,\n  eurydice: 4,\n  euterpe: 3,\n  every: 2,\n  everywhere: 3,\n  forever: 3,\n  gethsemane: 4,\n  guacamole: 4,\n  hermione: 4,\n  hyperbole: 4,\n  jesse: 2,\n  jukebox: 2,\n  karate: 3,\n  machete: 3,\n  maybe: 2,\n  naive: 2,\n  newlywed: 3,\n  penelope: 4,\n  people: 2,\n  persephone: 4,\n  phoebe: 2,\n  pulse: 1,\n  queue: 1,\n  recipe: 3,\n  riverbed: 3,\n  sesame: 3,\n  shoreline: 2,\n  simile: 3,\n  snuffleupagus: 5,\n  sometimes: 2,\n  syncope: 3,\n  tamale: 3,\n  waterbed: 3,\n  wednesday: 2,\n  yosemite: 4,\n  zoe: 2\n}\n","import pluralize from 'pluralize'\n// @ts-ignore remove when typed.\nimport normalize from 'normalize-strings'\nimport {problematic} from './problematic.js'\n\nvar own = {}.hasOwnProperty\n\n// Two expressions of occurrences which normally would be counted as two\n// syllables, but should be counted as one.\nvar EXPRESSION_MONOSYLLABIC_ONE = new RegExp(\n  [\n    'awe($|d|so)',\n    'cia(?:l|$)',\n    'tia',\n    'cius',\n    'cious',\n    '[^aeiou]giu',\n    '[aeiouy][^aeiouy]ion',\n    'iou',\n    'sia$',\n    'eous$',\n    '[oa]gue$',\n    '.[^aeiuoycgltdb]{2,}ed$',\n    '.ely$',\n    '^jua',\n    'uai',\n    'eau',\n    '^busi$',\n    '(?:[aeiouy](?:' +\n      [\n        '[bcfgklmnprsvwxyz]',\n        'ch',\n        'dg',\n        'g[hn]',\n        'lch',\n        'l[lv]',\n        'mm',\n        'nch',\n        'n[cgn]',\n        'r[bcnsv]',\n        'squ',\n        's[chkls]',\n        'th'\n      ].join('|') +\n      ')ed$)',\n    '(?:[aeiouy](?:' +\n      [\n        '[bdfklmnprstvy]',\n        'ch',\n        'g[hn]',\n        'lch',\n        'l[lv]',\n        'mm',\n        'nch',\n        'nn',\n        'r[nsv]',\n        'squ',\n        's[cklst]',\n        'th'\n      ].join('|') +\n      ')es$)'\n  ].join('|'),\n  'g'\n)\n\nvar EXPRESSION_MONOSYLLABIC_TWO = new RegExp(\n  '[aeiouy](?:' +\n    [\n      '[bcdfgklmnprstvyz]',\n      'ch',\n      'dg',\n      'g[hn]',\n      'l[lv]',\n      'mm',\n      'n[cgns]',\n      'r[cnsv]',\n      'squ',\n      's[cklst]',\n      'th'\n    ].join('|') +\n    ')e$',\n  'g'\n)\n\n// Four expression of occurrences which normally would be counted as one\n// syllable, but should be counted as two.\nvar EXPRESSION_DOUBLE_SYLLABIC_ONE = new RegExp(\n  '(?:' +\n    [\n      '([^aeiouy])\\\\1l',\n      '[^aeiouy]ie(?:r|s?t)',\n      '[aeiouym]bl',\n      'eo',\n      'ism',\n      'asm',\n      'thm',\n      'dnt',\n      'snt',\n      'uity',\n      'dea',\n      'gean',\n      'oa',\n      'ua',\n      'react?',\n      'orbed', // Cancel `'.[^aeiuoycgltdb]{2,}ed$',`\n      'shred', // Cancel `'.[^aeiuoycgltdb]{2,}ed$',`\n      'eings?',\n      '[aeiouy]sh?e[rs]'\n    ].join('|') +\n    ')$',\n  'g'\n)\n\nvar EXPRESSION_DOUBLE_SYLLABIC_TWO = new RegExp(\n  [\n    'creat(?!u)',\n    '[^gq]ua[^auieo]',\n    '[aeiou]{3}',\n    '^(?:ia|mc|coa[dglx].)',\n    '^re(app|es|im|us)',\n    '(th|d)eist'\n  ].join('|'),\n  'g'\n)\n\nvar EXPRESSION_DOUBLE_SYLLABIC_THREE = new RegExp(\n  [\n    '[^aeiou]y[ae]',\n    '[^l]lien',\n    'riet',\n    'dien',\n    'iu',\n    'io',\n    'ii',\n    'uen',\n    '[aeilotu]real',\n    'real[aeilotu]',\n    'iell',\n    'eo[^aeiou]',\n    '[aeiou]y[aeiou]'\n  ].join('|'),\n  'g'\n)\n\nvar EXPRESSION_DOUBLE_SYLLABIC_FOUR = /[^s]ia/\n\n// Expression to match single syllable pre- and suffixes.\nvar EXPRESSION_SINGLE = new RegExp(\n  [\n    '^(?:' +\n      [\n        'un',\n        'fore',\n        'ware',\n        'none?',\n        'out',\n        'post',\n        'sub',\n        'pre',\n        'pro',\n        'dis',\n        'side',\n        'some'\n      ].join('|') +\n      ')',\n    '(?:' +\n      [\n        'ly',\n        'less',\n        'some',\n        'ful',\n        'ers?',\n        'ness',\n        'cians?',\n        'ments?',\n        'ettes?',\n        'villes?',\n        'ships?',\n        'sides?',\n        'ports?',\n        'shires?',\n        '[gnst]ion(?:ed|s)?'\n      ].join('|') +\n      ')$'\n  ].join('|'),\n  'g'\n)\n\n// Expression to match double syllable pre- and suffixes.\nvar EXPRESSION_DOUBLE = new RegExp(\n  [\n    '^' +\n      '(?:' +\n      [\n        'above',\n        'anti',\n        'ante',\n        'counter',\n        'hyper',\n        'afore',\n        'agri',\n        'infra',\n        'intra',\n        'inter',\n        'over',\n        'semi',\n        'ultra',\n        'under',\n        'extra',\n        'dia',\n        'micro',\n        'mega',\n        'kilo',\n        'pico',\n        'nano',\n        'macro',\n        'somer'\n      ].join('|') +\n      ')',\n    '(?:fully|berry|woman|women|edly|union|((?:[bcdfghjklmnpqrstvwxz])|[aeiou])ye?ing)$'\n  ].join('|'),\n  'g'\n)\n\n// Expression to match triple syllable suffixes.\nvar EXPRESSION_TRIPLE = /(creations?|ology|ologist|onomy|onomist)$/g\n\n// Wrapper to support multiple word-parts (GH-11).\n/**\n * Syllable count\n *\n * @param {string} value\n * @returns {number}\n */\nexport function syllable(value) {\n  var values = normalize(String(value))\n    .toLowerCase()\n    // Remove apostrophes.\n    .replace(/['’]/g, '')\n    // Split on word boundaries.\n    .split(/\\b/g)\n  var index = -1\n  var sum = 0\n\n  while (++index < values.length) {\n    // Remove non-alphabetic characters from a given value.\n    sum += one(values[index].replace(/[^a-z]/g, ''))\n  }\n\n  return sum\n}\n\n/**\n * Get syllables in a given value.\n *\n * @param {string} value\n * @returns {number}\n */\nfunction one(value) {\n  var count = 0\n  /** @type {number} */\n  var index\n  /** @type {string} */\n  var singular\n  /** @type {Array.<string>} */\n  var parts\n  /** @type {ReturnType.<returnFactory>} */\n  var addOne\n  /** @type {ReturnType.<returnFactory>} */\n  var subtractOne\n\n  if (value.length === 0) {\n    return count\n  }\n\n  // Return early when possible.\n  if (value.length < 3) {\n    return 1\n  }\n\n  // If `value` is a hard to count, it might be in `problematic`.\n  if (own.call(problematic, value)) {\n    return problematic[value]\n  }\n\n  // Additionally, the singular word might be in `problematic`.\n  singular = pluralize(value, 1)\n\n  if (own.call(problematic, singular)) {\n    return problematic[singular]\n  }\n\n  addOne = returnFactory(1)\n  subtractOne = returnFactory(-1)\n\n  // Count some prefixes and suffixes, and remove their matched ranges.\n  value = value\n    .replace(EXPRESSION_TRIPLE, countFactory(3))\n    .replace(EXPRESSION_DOUBLE, countFactory(2))\n    .replace(EXPRESSION_SINGLE, countFactory(1))\n\n  // Count multiple consonants.\n  parts = value.split(/[^aeiouy]+/)\n  index = -1\n\n  while (++index < parts.length) {\n    if (parts[index] !== '') {\n      count++\n    }\n  }\n\n  // Subtract one for occurrences which should be counted as one (but are\n  // counted as two).\n  value\n    .replace(EXPRESSION_MONOSYLLABIC_ONE, subtractOne)\n    .replace(EXPRESSION_MONOSYLLABIC_TWO, subtractOne)\n\n  // Add one for occurrences which should be counted as two (but are counted as\n  // one).\n  value\n    .replace(EXPRESSION_DOUBLE_SYLLABIC_ONE, addOne)\n    .replace(EXPRESSION_DOUBLE_SYLLABIC_TWO, addOne)\n    .replace(EXPRESSION_DOUBLE_SYLLABIC_THREE, addOne)\n    .replace(EXPRESSION_DOUBLE_SYLLABIC_FOUR, addOne)\n\n  // Make sure at least on is returned.\n  return count || 1\n\n  /**\n   * Define scoped counters, to be used in `String#replace()` calls.\n   * The scoped counter removes the matched value from the input.\n   *\n   * @param {number} addition\n   */\n  function countFactory(addition) {\n    return counter\n    /**\n     * @returns {string}\n     */\n    function counter() {\n      count += addition\n      return ''\n    }\n  }\n\n  /**\n   * This scoped counter does not remove the matched value from the input.\n   *\n   * @param {number} addition\n   */\n  function returnFactory(addition) {\n    return returner\n    /**\n     * @param {string} $0\n     * @returns {string}\n     */\n    function returner($0) {\n      count += addition\n      return $0\n    }\n  }\n}\n","import { syllable } from 'syllable';\n\nconst getWords = (txt) => {\n    let result = [];\n    let words = txt.trim().split(/[\\s/]/);\n\n    for (const i in words) {\n        let word = words[i].trim();\n        if (word.length > 0 && word !== '.') {\n            if (word.match(/[\\w\\d][.?!]$/)) word = word.replace(/[.?!]/, '');\n            result.push(word);\n        }\n    }\n    return result;\n}\n\nconst getSentenceCount = (txt) => {\n    txt = txt.trim();\n    return txt.replace(/([.?!])\\s+(?=\\w)/g, \"$1|\").split(\"|\").length;\n}\n\nconst getSyllableCount = (words) => {\n    let words_array = getWords(words);\n    let result = 0;\n    for (const i in words_array) {\n        result += getSyllableCountByWord(words_array[i]);\n    }\n    return result;\n}\n\nconst getSyllableCountByWord = (word) => {\n    return syllable(word);\n}\n\nconst stripSpecialTitles = (txt) => {\n    txt = txt.replace(/\\s(prof{1,2})\\./g,' professor');\n    txt = txt.replace(/\\s(rev)\\./g,' reverend');\n    txt = txt.replace(/\\s(rt\\.\\shon)\\./g,' right honorary');\n    txt = txt.replace(/\\s(msgr)\\./g,' monsignor');\n    return txt.replace(/\\s(dr|mr|mrs|jr|sr|esq|messrs|mmes)\\./g,' title');\n}\n\nconst stripOutSpecialCharacters = (txt) => {\n    txt = txt.replace(/(\\(|\\)|;|:|,|-|—)/g,'');\n    txt = txt.replace(/^\\s*[\\r\\n]/gm, '');\n    return txt;\n}\n\nconst readingEaseTest = (totalWords, totalSentences, totalSyllables) => {\n    return ( 206.835 - 1.015 * (totalWords / totalSentences) - 84.6 * (totalSyllables / totalWords));\n}\n\nconst gradeLevelTest = (totalWords, totalSentences, totalSyllables) => {\n    return ( 0.39 * (totalWords/totalSentences) + 11.8 * (totalSyllables/totalWords) - 15.59);\n}\n\nexport const flekin = (text) => {\n    if (typeof text !== 'string') throw new Error('text is not of type string');\n    if (!text.length) throw new Error('text must not be an empty string');\n\n    text = text.toLowerCase().trim();\n    text = stripSpecialTitles(text);\n    text = stripOutSpecialCharacters(text);\n    let words = getWords(text);\n    let wordcount = words.length;\n    let sentencecount = getSentenceCount(text);\n    let syllablecount = getSyllableCount(text);\n\n    return {\n        grade_level: parseFloat(gradeLevelTest(wordcount, sentencecount, syllablecount).toFixed(2)),\n        reading_ease: parseFloat(readingEaseTest(wordcount, sentencecount, syllablecount).toFixed(2)),\n        word_count: wordcount,\n        syllable_count: syllablecount,\n        sentence_count: sentencecount\n    }\n}","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Main_main__PNPIY\",\"mainContainer\":\"Main_mainContainer__j0Dzz\",\"inputResultsContainer\":\"Main_inputResultsContainer__yONzC\",\"resultList\":\"Main_resultList__aCQlq\",\"resultField\":\"Main_resultField__qKM7x\",\"formArea\":\"Main_formArea__1-Jn2\",\"textLabel\":\"Main_textLabel__OhlIJ\",\"getScoresBtn\":\"Main_getScoresBtn__il2bG\",\"inHover\":\"Main_inHover__b4Tww\",\"disabledBtn\":\"Main_disabledBtn__1C5At\",\"outHover\":\"Main_outHover__3sJBs\",\"aboutContainer\":\"Main_aboutContainer__9OLur\",\"aboutDesc\":\"Main_aboutDesc__5eMO7\",\"textArea\":\"Main_textArea__gz+Jc\",\"hr\":\"Main_hr__cHqhb\",\"npmBlock\":\"Main_npmBlock__P9U1L\",\"codeBlock\":\"Main_codeBlock__zgO3I\",\"codeArg\":\"Main_codeArg__ZP3sk\",\"codeComment\":\"Main_codeComment__8eQXz\",\"commentBlock\":\"Main_commentBlock__zA5fZ\",\"numbersDetected\":\"Main_numbersDetected__0TNR7\",\"errorMsg\":\"Main_errorMsg__j+lpv\",\"copyToClip\":\"Main_copyToClip__wIrG7\",\"gradeResult\":\"Main_gradeResult__aM7q+\",\"rotateOnY\":\"Main_rotateOnY__Cl8bK\",\"easeResult\":\"Main_easeResult__R+CzC\",\"wordsResult\":\"Main_wordsResult__Ti07k\",\"syllableResult\":\"Main_syllableResult__eOTbZ\",\"sentenceResult\":\"Main_sentenceResult__tkStm\"};","import React, {useState} from 'react';\nimport {flekin} from 'flekin';\nimport { useInView } from 'react-intersection-observer';\nimport {FaRegCopy} from 'react-icons/fa';\nimport { IconContext } from 'react-icons/lib';\nimport styles from '../../styles/flekin/Main.module.css';\n\nconst Main = () => {\n  const [text, setText] = useState('');\n  const [copyToClip, setCopyToClip] = useState(false);\n  const [numbersDetected, setNumbersDetected] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [animateResults, setAnimateResults] = useState(false);\n  const [readingEase, setReadingEase] = useState();\n  const [gradeLevel, setGradeLevel] = useState();\n  const [wordCount, setWordCount] = useState();\n  const [syllableCount, setSyllableCount] = useState();\n  const [sentenceCount, setSentenceCount] = useState();\n\n  const { ref: resultsRef, inView } = useInView({\n    threshold: 0,\n  });\n\n  const textHandler = e => {\n    setNumbersDetected(/\\d/.test(e.target.value));\n    setText(e.target.value);\n  }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    try {\n      if (text.trim().length === 0) throw new Error('Please enter some text');\n      const scores = flekin(text);\n      setReadingEase(scores.reading_ease);\n      setGradeLevel(scores.grade_level);\n      setWordCount(scores.word_count);\n      setSyllableCount(scores.syllable_count);\n      setSentenceCount(scores.sentence_count);\n      if (!inView) document.getElementById('results_id').scrollIntoView();\n      setAnimateResults(true);\n      setError(false);\n      setErrorMsg('');\n    } catch (e) {\n      setError(true);\n      setErrorMsg(e.message);\n    }\n  }\n\n  const animationEndHandler = () => {\n    setAnimateResults(false);\n  }\n\n  const copyToClipEndHandler = () => {\n    setCopyToClip(false);\n  }\n\n  const copyHandler = () => {\n    navigator.clipboard.writeText(\"npm install flekin\");\n    setCopyToClip(true);\n  }\n\n  return (\n    <main className={styles.main}>\n      <div className={styles.mainContainer} >\n        <div className={styles.inputResultsContainer}>\n          <div className={styles.resultContainer}>\n            <h2 id=\"results_id\" ref={resultsRef} >Results</h2>\n            <div className={styles.resultList}>\n              <div className={styles.resultField} >\n                <div>Grade Level:</div>\n                <div className={`${animateResults? styles.gradeResult: ''}`} >{gradeLevel}</div>\n              </div>\n              <div className={styles.resultField} >\n                <div>Reading Ease:</div>\n                <div className={`${animateResults? styles.easeResult: ''}`} >{readingEase}</div>\n              </div>\n              <div className={styles.resultField} >\n                <div>Words:</div>\n                <div className={`${animateResults? styles.wordsResult: ''}`} >{wordCount}</div>\n              </div>\n              <div className={styles.resultField} >\n                <div>Syllables:</div>\n                <div className={`${animateResults? styles.syllableResult: ''}`} >{syllableCount}</div>\n              </div>\n              <div className={styles.resultField} >\n                <div>Sentences:</div>\n                <div className={`${animateResults? styles.sentenceResult: ''}`} onAnimationEnd={animationEndHandler}>{sentenceCount}</div>\n              </div>\n            </div>\n          </div>\n          <form className={styles.formArea}  onSubmit={submitHandler} spellCheck={false}>\n            <label className={styles.textLabel} htmlFor='textBox' >Enter your text here:</label>\n            <textarea id=\"textBox\" className={styles.textArea} value={text} onChange={textHandler} />\n            {numbersDetected && <div className={styles.numbersDetected}>Numbers detected: convert numbers to words for more accurate results</div>}\n            {error && <div className={styles.errorMsg}>{errorMsg}</div>}\n            <button className={text.length? styles.getScoresBtn: styles.disabledBtn} disabled={!text.length? true: false} >Get Scores</button>\n          </form>\n        </div>\n        <div className={styles.hr}></div>\n        <article className={styles.aboutContainer}>\n          <h2>About</h2>\n          <p className={styles.aboutDesc}>\n            Flekin (short for Flesch-Kincaid) is a free JavaScript library that allows developers to programmatically measure the readability of english text. The Flesch-Kincaid formula is commonly used as a requirement for documents like insurance policies.\n          </p>\n        </article>\n        <article className={styles.aboutContainer}>\n          <h2>Install with npm</h2>\n          <div className={`${styles.codeBlock} ${styles.npmBlock} ${copyToClip && styles.copyToClip}`} onClick={copyHandler} onAnimationEnd={copyToClipEndHandler}>\n            <p>\n              npm install flekin\n            </p>\n            <IconContext.Provider value={{color: \"var(--text-color)\"}}>\n              <FaRegCopy />\n            </IconContext.Provider>\n          </div>\n\n        </article>\n        <article className={styles.aboutContainer}>\n          <h2>Usage</h2>\n          <div className={`${styles.codeBlock} ${styles.commentBlock}`}>\n            <p>import &#123;flekin&#125; from 'flekin';</p>\n            <p>const scores = flekin(<span className={styles.codeArg}>'Nothing is so fatiguing as the eternal hanging on of an uncompleted task.'</span>);</p>\n            <i className={styles.codeComment}>&#47;&#47; &nbsp;&#123;</i>\n            <i className={styles.codeComment}>&#47;&#47; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;grade_level: 9.45,</i>\n            <i className={styles.codeComment}>&#47;&#47; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reading_ease: 50.47,</i>\n            <i className={styles.codeComment}>&#47;&#47; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;word_count: 13,</i>\n            <i className={styles.codeComment}>&#47;&#47; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;syllable_count: 22,</i>\n            <i className={styles.codeComment}>&#47;&#47; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sentence_count: 1</i>\n            <i className={styles.codeComment}>&#47;&#47; &nbsp;&#125;</i>\n          </div>\n        </article>\n      </div>\n    </main>\n  )\n}\n\nexport default Main;","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"Footer_footer__FvE+Y\",\"link\":\"Footer_link__VapFP\"};","import React from 'react';\nimport { IconContext } from 'react-icons/lib';\nimport { FaGithub, FaNpm, FaReact, FaJsSquare } from 'react-icons/fa';\nimport styles from '../../styles/flekin/Footer.module.css';\n\nconst Footer = () => {\n  return (\n    <footer className={styles.footer}>\n      <IconContext.Provider value={{color: \"var(--primary-color)\", size:\"2rem\"}}>\n        <div style={{\"display\": \"flex\", \"gap\": \"1rem\"}}>\n          <FaGithub />\n          <FaReact />\n          <FaJsSquare />\n          <FaNpm />\n        </div>\n      </IconContext.Provider>\n      <a className={styles.link} href=\"https://en.wikipedia.org/wiki/Flesch%E2%80%93Kincaid_readability_tests\" target=\"_blank\" rel=\"noopener noreferrer\">About Flesch-Kincaid</a>\n      <a className={styles.link} href=\"https://github.com/jpagtama/flekin\" target=\"_blank\" rel=\"noopener noreferrer\" >View the code on GitHub</a>\n      <span><a className={styles.link} href=\"https://julianpagtama.com\" target=\"_blank\" rel=\"noopener noreferrer\" >Julian Pagtama</a> &copy; {new Date().getFullYear()}</span>\n    </footer>\n  )\n}\n\nexport default Footer;","// extracted by mini-css-extract-plugin\nexport default {\"flekin\":\"Flekin_flekin__JYGCB\"};","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport styles from '../../styles/flekin/Flekin.module.css';\n\nconst Flekin = () => {\n  return (\n    <div className={styles.flekin}>\n        <Header />\n        <Main />\n        <Footer />\n    </div>\n  )\n}\n\nexport default Flekin","(function(global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return factory(global, global.document);\n    });\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory(global, global.document);\n  } else {\n      global.normalize = factory(global, global.document);\n  }\n} (typeof window !== 'undefined' ? window : this, function (window, document) {\n  var charmap = require('./charmap.json');\n  var regex = null;\n  var current_charmap;\n  var old_charmap;\n\n  function normalize(str, custom_charmap) {\n    old_charmap = current_charmap;\n    current_charmap = custom_charmap || charmap;\n\n    regex = (regex && old_charmap === current_charmap) ? regex : buildRegExp(current_charmap);\n\n    return str.replace(regex, function(charToReplace) {\n      return current_charmap[charToReplace.charCodeAt(0)] || charToReplace;\n    });\n  }\n\n  function buildRegExp(charmap){\n     return new RegExp('[' + Object.keys(charmap).map(function(code) {return String.fromCharCode(code); }).join(' ') + ']', 'g');\n   }\n\n  return normalize;\n}));\n","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n"],"names":["useState","animate","setAnimate","useEffect","className","styles","onClick","onAnimationEnd","problematic","abalone","abare","abbruzzese","abed","aborigine","abruzzese","acreage","adame","adieu","adobe","anemone","anyone","apache","aphrodite","apostrophe","ariadne","cafe","calliope","catastrophe","chile","chloe","circe","coyote","daphne","epitome","eurydice","euterpe","every","everywhere","forever","gethsemane","guacamole","hermione","hyperbole","jesse","jukebox","karate","machete","maybe","naive","newlywed","penelope","people","persephone","phoebe","pulse","queue","recipe","riverbed","sesame","shoreline","simile","snuffleupagus","sometimes","syncope","tamale","waterbed","wednesday","yosemite","zoe","own","hasOwnProperty","EXPRESSION_MONOSYLLABIC_ONE","RegExp","join","EXPRESSION_MONOSYLLABIC_TWO","EXPRESSION_DOUBLE_SYLLABIC_ONE","EXPRESSION_DOUBLE_SYLLABIC_TWO","EXPRESSION_DOUBLE_SYLLABIC_THREE","EXPRESSION_DOUBLE_SYLLABIC_FOUR","EXPRESSION_SINGLE","EXPRESSION_DOUBLE","EXPRESSION_TRIPLE","one","value","index","singular","parts","addOne","subtractOne","count","length","call","pluralize","returnFactory","replace","countFactory","split","addition","$0","getWords","txt","result","words","trim","i","word","match","push","getSyllableCountByWord","values","normalize","String","toLowerCase","sum","syllable","readingEaseTest","totalWords","totalSentences","totalSyllables","flekin","text","Error","stripOutSpecialCharacters","wordcount","sentencecount","getSentenceCount","syllablecount","words_array","getSyllableCount","grade_level","parseFloat","toFixed","reading_ease","word_count","syllable_count","sentence_count","setText","copyToClip","setCopyToClip","numbersDetected","setNumbersDetected","error","setError","errorMsg","setErrorMsg","animateResults","setAnimateResults","readingEase","setReadingEase","gradeLevel","setGradeLevel","wordCount","setWordCount","syllableCount","setSyllableCount","sentenceCount","setSentenceCount","useInView","threshold","resultsRef","ref","inView","id","onSubmit","e","preventDefault","scores","document","getElementById","scrollIntoView","message","spellCheck","htmlFor","onChange","test","target","disabled","navigator","clipboard","writeText","color","size","style","href","rel","Date","getFullYear","global","window","this","define","current_charmap","old_charmap","charmap","require","regex","str","custom_charmap","buildRegExp","charToReplace","charCodeAt","Object","keys","map","code","fromCharCode","factory","module","exports","pluralRules","singularRules","uncountables","irregularPlurals","irregularSingles","sanitizeRule","rule","restoreCase","token","toUpperCase","charAt","substr","interpolate","args","arguments","sanitizeWord","rules","len","replaceWord","replaceMap","keepMap","checkWord","bool","inclusive","plural","isPlural","isSingular","addPluralRule","replacement","addSingularRule","addUncountableRule","addIrregularRule","single","forEach"],"sourceRoot":""}